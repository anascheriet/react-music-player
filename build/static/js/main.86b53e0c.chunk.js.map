{"version":3,"sources":["components/util.js","components/LibrarySong.js","components/Library.js","components/Nav.js","components/Player.js","components/Song.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","LibrarySong","song","setCurrentSong","setSongs","songs","id","className","active","onClick","newSongs","map","alt","name","src","cover","artist","Library","libraryStatus","Nav","setLibraryStatus","icon","faMusic","Player","currentSong","setIsPlaying","useEffect","useState","currentTime","duration","songInfo","setSongInfo","timeUpdateHandler","e","target","getTime","time","Math","floor","slice","skipSongHandle","direction","currentSongIndex","findIndex","x","lastSongIndex","length","console","log","songEndHandler","a","type","min","max","value","onChange","size","faAngleLeft","faPause","faPlay","pause","faAngleRight","onTimeUpdate","ref","onLoadedMetadata","onEnded","Song","chillhop","color","uuidv4","App","data","useRef","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86b53e0c.chunk.js","sourcesContent":["import React from 'react'\n\nexport const playAudio = (isPlaying, audioRef) => {\n    if (isPlaying) {\n        const playPromise = audioRef.current.play();\n        if (playPromise !== undefined) {\n            playPromise.then((audio) => {\n                audioRef.current.play();\n            });\n        }\n    }\n}\n","import React from 'react'\nimport { playAudio } from './util';\n\nexport const LibrarySong = ({ song, setCurrentSong, audioRef, isPlaying, setSongs, songs, id }) => {\n\n\n    const selectSongHandle = () => {\n        setCurrentSong(song);\n        playAudio(isPlaying, audioRef);\n\n        const newSongs = songs.map((song) => {\n            if (song.id === id) {\n                return {\n                    ...song,\n                    active: true\n                }\n            }\n            else {\n                return {\n                    ...song,\n                    active: false,\n                }\n            }\n        })\n\n        setSongs(newSongs);\n    };\n\n    return (\n        <div className={`library-song ${song.active ? 'selected' : ''}`} onClick={selectSongHandle}>\n            <img alt={song.name} src={song.cover}></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { LibrarySong } from './LibrarySong';\n\nexport const Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\n    return (\n        <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map(song => {\n                    return <LibrarySong key={song.id} song={song} setCurrentSong={setCurrentSong} audioRef={audioRef} isPlaying={isPlaying} setSongs={setSongs} songs={songs} id={song.id} />\n                })}\n\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\"\n\nexport const Nav = ({ libraryStatus, setLibraryStatus }) => {\n    return (\n        <nav className=\"nav\">\n            <h1>Waves</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n        </nav>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons'\nimport { playAudio } from './util'\nexport const Player = ({ currentSong, setIsPlaying, isPlaying, audioRef, songs, setCurrentSong, setSongs }) => {\n\n    //useEffect\n    useEffect(() => {\n        const newSongs = songs.map((song) => {\n            if (song.id === currentSong.id) {\n                return {\n                    ...song,\n                    active: true\n                }\n            }\n            else {\n                return {\n                    ...song,\n                    active: false,\n                }\n            }\n        });\n        setSongs(newSongs);\n    }, [currentSong])\n\n    //event handlers\n    const playSongHandler = () => {\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        }\n        else if (!isPlaying) {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    }\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\n    }\n\n    //State\n    const [songInfo, setSongInfo] = useState({\n        currentTime: 0,\n        duration: 0\n    })\n\n\n    const timeUpdateHandler = (e) => {\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n        setSongInfo({\n            ...songInfo,\n            currentTime: current,\n            duration: duration\n        })\n    }\n\n    const getTime = (time) => {\n        return (Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2));\n    }\n\n    const skipSongHandle = (direction) => {\n        let currentSongIndex = songs.findIndex(x => x.id === currentSong.id);\n        let lastSongIndex = songs.length - 1;\n        if (direction === 'previous') {\n            if (currentSongIndex === 0) {\n                setCurrentSong(songs[lastSongIndex]);\n                playAudio(isPlaying, audioRef);\n            }\n            else {\n                setCurrentSong(songs[(currentSongIndex - 1) % songs.length]);\n                playAudio(isPlaying, audioRef);\n            }\n            console.log(songs.length - 1);\n        }\n        else if (direction === 'next') {\n            setCurrentSong(songs[(currentSongIndex + 1) % songs.length]);\n            playAudio(isPlaying, audioRef);\n        }\n    }\n\n    const songEndHandler = async () => {\n        let currentSongIndex = songs.findIndex(x => x.id === currentSong.id);\n        await setCurrentSong(songs[(currentSongIndex + 1) % songs.length]);\n        if (isPlaying) audioRef.current.play();\n    }\n\n    return (\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n\n                <input\n                    type=\"range\"\n                    min={0}\n                    max={songInfo.duration}\n                    value={songInfo.currentTime}\n                    onChange={dragHandler} />\n\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n            </div>\n\n            <div className=\"play-control\">\n                <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} onClick={() => skipSongHandle('previous')} />\n                <FontAwesomeIcon className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay} onClick={playSongHandler} />\n                <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight} onClick={() => skipSongHandle('next')} />\n\n            </div>\n\n            <audio onTimeUpdate={timeUpdateHandler} ref={audioRef}\n                onLoadedMetadata={timeUpdateHandler} src={currentSong.audio}\n                onEnded={songEndHandler}></audio>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Song = ({ currentSong }) => {\n    return (\n        <div className=\"song-container\">\n            <img alt={currentSong.name} src={currentSong.cover}></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    )\n}\n","import { v4 as uuidv4 } from \"uuid\"\n\nconst chillhop = () => {\n    return [\n        {\n            name: \"Beaver Creek\",\n            cover:\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n            artist: \"Aso, Middle School, Aviino\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n            color: [\"#205950\", \"#2ab3bf\"],\n            id: uuidv4(),\n            active: true,\n        },\n        {\n            name: \"Daylight\",\n            cover:\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n            artist: \"Aiguille\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n            color: [\"#EF8EA9\", \"#ab417f\"],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: \"Keep Going\",\n            cover:\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n            artist: \"Swørn\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n            color: [\"#CD607D\", \"#c94043\"],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: \"Nightfall\",\n            cover:\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n            artist: \"Aiguille\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n            color: [\"#EF8EA9\", \"#ab417f\"],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: \"Reflection\",\n            cover:\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n            artist: \"Swørn\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n            color: [\"#CD607D\", \"#c94043\"],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: \"Going Back\",\n            artist: \"Swørn‚\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/10/737bb830d34592344eb4a2a1d2c006cdbfc811d9-1024x1024.jpg\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10310\",\n            color: ['#335561', '#454966'],\n            id: uuidv4(),\n            active: false\n        }\n        //ADD MORE HERE\n    ];\n}\nexport default chillhop;","import { useRef, useState } from \"react\";\nimport { Library } from \"./components/Library\";\nimport { Nav } from \"./components/Nav\";\nimport { Player } from \"./components/Player\";\nimport { Song } from \"./components/Song\";\nimport './styles/app.scss';\nimport data from \"./data\";\n\nfunction App() {\n  //State \n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[3]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  //Ref\n  const audioRef = useRef(null);\n  return (\n    <div className=\"App\">\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player audioRef={audioRef} isPlaying={isPlaying} setIsPlaying={setIsPlaying} currentSong={currentSong} songs={songs} setCurrentSong={setCurrentSong} setSongs={setSongs} />\n      <Library songs={songs} setCurrentSong={setCurrentSong} audioRef={audioRef} isPlaying={isPlaying} setSongs={setSongs} libraryStatus={libraryStatus}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}